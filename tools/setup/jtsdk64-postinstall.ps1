
#-----------------------------------------------------------------------------#
# Name ........: jtsdk64-postinstall.ps1
# Project .....: HAMLIB SDK - JTSDK64 Tools Project
# Version .....: 3.2.0 beta
# Description .: Installs Components based on User selections
# 
# Usage .......: Call from jtsdk64-tools-setup environ => jtsdk64-postinstall $*
#
# Concept .....: (C) Greg, Beam, KI7MT, <ki7mt@yahoo.com> and batch file work
#
# Copyright ...: (c) Copyright (C) 2020 JTSDK Contributors
# License .....: GPLv3
# 
# Updates .....: Steve VK3SIR 24-27th Dec 2020
#
# Note ........: This script will FAIL unless it is executed from within a
#                shell generated by jtsdk64-setup.ps1 ! 
#
#-----------------------------------------------------------------------------#


function MsgDisplay {
	Write-Host " If you wish to re-enter selections type: postinstall"
	exit (0)
}

function WriteErrorMessage {
    Write-Host " "
    Write-Host "**************************************************** "
	Write-Host "Processing Error"
    Write-Host "**************************************************** "
	Write-Host " "
	Write-Host "The exit status from step `[ $step `] returned"
	Write-Host "a non-zero status. Check the error message and"
	Write-Host "and try again."
	Write-Host " "
	Write-Host "If the problem presists, contact: JTSDK@Groups.io"
	Write-Host " "
	exit (-1)
}

$install="N"

Clear-Host

Write-Host " "
Write-Host "-----------------------------------------------------"
Write-Host " JTSDK64 Tools Post Install/Redeployment Selections"
Write-Host "-----------------------------------------------------"
Write-Host " "
Write-Host "At the prompts, indicate which components you want to"
Write-Host "install or redeploy. Use option ( Y = Yes or N = No )"
Write-Host " "
Write-Host "For the Qt Install Selection:"
Write-Host " "
Write-Host "   D / Y = Default ( minimal set of tools )"
Write-Host "   F = Full ( full set of tools )"
Write-Host "   N = Skip Installation"
Write-Host " "
Write-Host "NOTE: Git, Qt and MSYS2 are mandatory to build" 
Write-Host "JT-software."

# GET SELECTIONS

Write-Host " "
Write-Host "Enter Your Install/Redeployment Selection(s)`:"
Write-Host " "

$userInputGit = Read-Host "(required) Git-SCM (Y|N)        "
$userInputQt = Read-Host "(required) Default Qt (D/Y|F|N) "
$userInputMsys2 = Read-Host "(required) MSYS2 Setup (Y|N)    "
$userInputVSCode = Read-Host "(optional) VS Code (Y|N)        "

# DISPLAY SELECTIONS

Write-Host " "
Write-Host "Your Install Selections Were:"
Write-Host " "
Write-Host "  Git      : $userInputGit"
Write-Host "  Qt All   : $userInputQt"
Write-Host "  MSYS2    : $userInputMsys2"
Write-Host "  VS Code  : $userInputVSCode"
Write-Host " "

# -----------------------------------------------------------------------------
# SELECTIONS
# -----------------------------------------------------------------------------

# GIT SELECTION

if ($userInputGit -eq "Y") {
    $install = "Y"
    $step = "Git Install"
    #$cmd = "$env:JTSDK_SETUP\git\git-install.cmd install"
	#$exitCode = Invoke-Command -ScriptBlock { cmd /c $cmd *> $null; return $LASTEXITCODE }

    $cmd = "$env:JTSDK_SETUP\git\Install-Git.ps1"
    $param="install"
    Invoke-Expression "$cmd $param"
	
    #if ($exitCode -ne 0) { WriteErrorMessage }
    if ($LASTEXITCODE -ne 0) { WriteErrorMessage }
}

# VS CODE SELECTION
if  ($userInputVSCode -eq "Y") {
    $install="Y"
    $step = "VS Code Install"
    #$cmd = "$env:JTSDK_SETUP\vscode\vscode-install.cmd install"
	#$exitCode = Invoke-Command -ScriptBlock { cmd /c $cmd *> $null; return $LASTEXITCODE }
    
    $cmd = "$env:JTSDK_SETUP\vscode\Install-VSCode.ps1" # install"
    $param="install"
    Invoke-Expression "$cmd $param"

    #if ($exitCode -ne 0) { WriteErrorMessage }
    if ($LASTEXITCODE -ne 0) { WriteErrorMessage }
}

# QTSELECTION

# If option -eq N, skip installation
if  ($userInputQt -ne "N") {

	# Generate the script files for the QT Installer
	# $cmd = "$env:JTSDK_SETUP\qt\qtgenjs.cmd"
	$cmd = "$env:JTSDK_SETUP\qt\Generate-JSQt.ps1"
	$step = "QT Generate Script"
    Invoke-Expression "$cmd $param"
    if ($LASTEXITCODE -ne 0) { WriteErrorMessage }

	$cmd = "$env:JTSDK_SETUP\qt\Install-Qt.ps1"
	
	# If option -eq D, install default (minimal) set of scripted Qt options
	
	if  (($userInputQt -eq "D") -or ($userInputQt -eq "Y")) {
		$install="Y"
		$step = "QT Default Install"
        $param="min"
        Invoke-Expression "$cmd $param"
        if ($LASTEXITCODE -ne 0) { WriteErrorMessage }

	}
	
	# If option -eq F, install full (basic) set of Scripted Qt options
	
	if  ($userInputQt -eq "F") {
		$install="Y"
		$step = "QT Full Install"
        $param="full"
        Invoke-Expression "$cmd $param"
        if ($LASTEXITCODE -ne 0) { WriteErrorMessage }
	}
}

# MSYS2 SELECTION

if  ($userInputMsys2 -eq "Y") {
    $install="Y"
    $cmd = "$env:JTSDK_HOME\tools\msys64\msys2_shell.cmd"
	$exitCode = Invoke-Command -ScriptBlock { cmd /c $cmd *> $null; return $LASTEXITCODE }
	if ($exitCode -ne 0) { WriteErrorMessage }
}

# FINISHED

if  ($install -eq "Y") {
	
	Write-Host " "
	# Clear-Host
	Write-Host "-----------------------------------------------------"
	Write-Host " JTSDK64 Tools Post Install Summary"
	Write-Host "-----------------------------------------------------"
	Write-Host " "
	Write-Host "Post Installation Stage Complete"
	Write-Host " "
	Write-Host "Exit the JTSDK64 Tools Setup Environment and re-open"
	Write-Host "to see the current status of installed tools."

	if  ($userInputMsys2 -eq "Y") {
		Write-Host " "
		Write-Host "MSYS2 Initial Setup requires several additional steps."
		Write-Host "Open the MSYS2 environemnt and refer to the on-screen" 
		Write-Host "messages to perform the initial installation`/updates."
		Write-Host " "
		Write-Host "After fully updating MSYS2, select the appropriate menu"
		Write-Host "option to install the Hamlib Dependencies. Close the"
		Write-Host "installation environment."
		Write-Host " "
		Write-Host "Perform the remaining tasks including building Hamlib" 
		Write-Host "under the `"JTSDK64-Tools`" Environment."
		Write-Host " "
	}
} else {

	# NOTHING TO DO
	
	Write-Host "Nothing to do. All available options were No."
}

# EXIT INSTALL

Write-Host " "
Write-Host "Exiting Post Installation."
Write-Host " "
exit (0)